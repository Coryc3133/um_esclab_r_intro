ps_data <- import("https://raw.githubusercontent.com/Coryc3133/uoregon_r_bootcamp/master/pragmatic_scales_data.csv")
summary(ps_data)
ps_data[, "subid"]
select(ps_data, age)
select(ps_data, age, condition)
select(ps_data, 1)
select(ps_data, -age)
select(ps_data, -5)
# select first three:
select(ps_data, 1:3)
# de-select last three:
select(ps_data, -(1:3)) # - requires parenthetical sequence
# de-select last three:
select(ps_data, -1:3) # - requires parenthetical sequence
# de-select last three:
select(ps_data, -(1:3)) # - requires parenthetical sequence
# select first three
select(ps_data, subid:correct)
# deselect first three
select(ps_data, -(subid:correct))
select(ps_data, starts_with("c"))
select(ps_data, ends_with("e"))
select(ps_data, contains("i"))
select(ps_data, contains("e"))
filter(ps_data, condition == "No Label")
filter(ps_data, condition == "No Label" & age <= 3)
filter(ps_data, condition == "Label" | age <= 3)
filter(ps_data, between(age, 2.1, 2.5))
filter(ps_data, between(age, 3, 4))
sum(ps_data$age)
ps_data$age %>% # LHS is age vector from ps_data
sum() # pass that to the sum function
ps_data$age %>% # LHS is age vector from ps_data
sum() # pass that to the sum function
ps_data %>% # take the data, then...
select(age) %>%  # select age, then...
sum() # take the sum
ps_data %>% select(age) %>% sum()
ps_data %>%
select(age) %>%
sum()
unique(select(filter(ps_data, age > 2.5 | age < 3.2), age, subid))
unique(select(filter(ps_data, age > 2.5 | age < 3.2), age, subid))
ps_data %>% # take the data, then...
filter(age > 2.5 | age > 3.2) %>% # filter for kids between 2.5 and 3.2, then...
select(subid, age) %>% # select subject id and centered age, then...
unique() # get unique rows
unique_filtered_data <- ps_data %>% # take the data, then...
filter(age > 2.5 | age > 3.2) %>% # filter for kids between 2.5 and 3.2, then...
select(subid, age) %>% # select subject id and centered age, then...
unique() # get unique rows
ps_data %>%
filter(age >= 4) %>%
select(correct) %>%
sum()
ps_data %>%
filter(age >= 4 & correct == 1)
# or
ps_data %>%
filter(age >= 4 & correct == 1) %>%
nrow()
starwars
starwars %>%
select(name, homeworld)
starwars %>%
select(name:homeworld)
starwars %>%
select(contains("color"))
starwars %>%
select(homeworld, name, everything())
search()
data()
data()
data()
seals
starwars %>%
select(starts_with("h"), everything())
starwars
select
starwars %>%
filter(height < 100)
starwars %>%
filter(height > mean(height, na.rm = TRUE) + sd(height, na.rm = TRUE)) # don't forget na.rm!
starwars %>%
filter(mass == NA)
starwars %>%
filter(is.na(mass)) # note you wrap the variable in is.na()
starwars %>%
filter(!is.na(mass))
!TRUE
!FALSE
! 5 == 5
! 5 == 4
starwars %>%
filter(height > mean(height, na.rm = TRUE) + sd(height, na.rm = TRUE) &
mass < mean(mass, na.rm = TRUE))
starwars %>%
filter(height > mean(height, na.rm = TRUE) + sd(height, na.rm = TRUE) |
height < mean(height, na.rm = TRUE) + sd(height, na.rm = TRUE))
starwars %>%
filter(hair_color == "grey")
starwars %>%
filter(hair_color == "grey" |
hair_color == "brown")
starwars %>%
filter(hair_color == "grey" |
hair_color == "brown")
starwars %>%
filter(hair_color != "brown")
starwars %>%
filter(str_detect(hair_color, "grey")) # first argument is string var,
starwars %>%
filter(!str_detect(hair_color, "grey"))
starwars %>%
filter(birth_year >= 200)
starwars %>%
filter(birth_year >= 200)
starwars %>%
filter(!str_detect(eye_color, "blue")) %>%
select(name, eye_color, species)
starwars %>%
filter(!str_detect(eye_color, "blue")) %>%
select(name, eye_color, species)
starwars %>%
filter(species == "Droid" & homeworld == "Tatooine" |
species == "Human" & homeworld == "Naboo") %>%
select(name, homeworld, species, ends_with("color"))
table4a
?table1 #let's learn about the datset
table1 #this dataset is tidy!
?table1 #let's learn about the datset
table1 #this dataset is tidy!
table4a
left_join(tidy4a, tidy4b)
?table1 #let's learn about the datset
table1 #this dataset is tidy!
left_join(tidy4a, tidy4b)
library(tidyverse)
library(tidyverse)
?table1 #let's learn about the datset
table1 #this dataset is tidy!
table4a
table4a %>%
gather(`1999`, `2000`, key = "year", value = "cases")
table4b #check it out
table4b %>%
gather(`1999`, `2000`, key = "year", value = "population")
tidy4a <- table4a %>%
gather(`1999`, `2000`, key = "year", value = "cases")
tidy4b <- table4b %>%
gather(`1999`, `2000`, key = "year", value = "population")
left_join(tidy4a, tidy4b)
table2
table2 %>%
spread(key = type, value = count)
ps_data %>%
spread(item, correct)
```{r}
table2
table2 %>%
spread(key = type, value = count)
ps_data %>%
spread(item, correct)
ps_data %>%
spread(item, correct)
ps_data <- import("pragmatic_scales_data.csv")
library(rio)
ps_data <- import("pragmatic_scales_data.csv")
ps_data %>%
spread(item, correct)
starwars %>%
separate(col = name, into = c("first_name", "last_name"))
starwars_sep_names
starwars_sep_names <- starwars %>%
separate(name, c("first_name", "last_name"), sep = " ")
starwars_sep_names
starwars_sep_names %>%
unite(col = name, first_name, last_name)
starwars_sep_names %>%
unite(col = name, first_name, last_name, sep = " ") %>%
mutate(name = str_remove_all(name, "NA")) # overwrite name with
psych::bfi
psych::bfi
?iris # first, let's learn about the dataset
ggplot(data = iris)
ggplot(data = iris) + # attach data
geom_histogram(mapping = aes(x = Sepal.Length)) # add geom w/ aesthetic map
ggplot(data = iris) + # attach data
geom_histogram(mapping = aes(x = Sepal.Length), bins = 100)
ggplot(data = iris) + # attach data
geom_histogram(mapping = aes(x = Sepal.Length), bins = 9)
ggplot(data = iris) + # attach data
geom_histogram(mapping = aes(x = Sepal.Length), color = "red") # change bins to 9
ggplot(data = iris) + # attach data
geom_histogram(mapping = aes(x = Sepal.Length), fill = "red") # change bins to 9
ggplot(data = iris) + # attach data
geom_point(mapping = aes(x = Sepal.Length)) # add geom w/ aesthetic map
ggplot(data = iris) + # attach data
geom_point(mapping = aes(x = Sepal.Length, y = Petal.Length)) # add geom w/ aesthetic map
ggplot(data = iris) + # attach data
geom_point(mapping = aes(x = Sepal.Length)) # add geom w/ aesthetic map
ggplot(data = iris) + # attach data
geom_point(mapping = aes(x = Sepal.Length, y = Petal.Length)) # add geom w/ aesthetic map
ggplot(data = iris) +
geom_point(mapping = aes(x = Sepal.Length, y = Petal.Length, color = Species))
ggplot(data = iris) + # attach data
geom_point(mapping = aes(x = Sepal.Length, # geom w/ aesthetic mapping
y = Petal.Length,
color = Species)) # color including in aes()
?geom_point
ggplot(data = iris) + # attach data
geom_point(mapping = aes(x = Sepal.Length, # geom w/ aesthetic mapping
y = Petal.Length)
color = Species) # color including in aes()
ggplot(data = iris) + # attach data
geom_point(mapping = aes(x = Sepal.Length, # geom w/ aesthetic mapping
y = Petal.Length),
color = Species) # color including in aes()
ggplot(data = iris) + # attach data
geom_point(mapping = aes(x = Sepal.Length, # geom w/ aesthetic mapping
y = Petal.Length),
color = "Species") # color including in aes()
ggplot(data = iris) + # attach data
geom_point(mapping = aes(x = Sepal.Length, # geom w/ aesthetic mapping
y = Petal.Length,
color = "red")) # color including in aes()
ggplot(data = iris) + # attach data
geom_point(mapping = aes(x = Sepal.Length, # geom w/ aesthetic mapping
y = Petal.Length,
color = "red")) # color including in aes()
ggplot(data = iris) +
geom_point(mapping = aes(x = Sepal.Length, y = Petal.Length)) +
facet_wrap(~ Species)
ggplot(data = iris) +
geom_smooth(mapping = aes(x = Sepal.Length, y = Petal.Length))
ggplot(data = iris) +
geom_point(mapping = aes(x = Sepal.Length, y = Petal.Length, color = Species)) +
geom_smooth(mapping = aes(x = Sepal.Length, y = Petal.Length))
ggplot(data = iris) +
geom_point(mapping = aes(x = Sepal.Length, y = Petal.Length, color = Species)) +
geom_smooth(mapping = aes(x = Sepal.Length, y = Petal.Length), color = "black")
ggplot(data = iris) +
geom_point(mapping = aes(x = Sepal.Length, y = Petal.Length, color = Species)) +
geom_smooth(mapping = aes(x = Sepal.Length, y = Petal.Length), color = "black")
ggplot(data = iris, aes(x = Sepal.Length, y = Petal.Length)) +
geom_point(aes(color = Species)) +
geom_smooth(color = "black")
You might be wondering, what do we put in global aesthetic mapping and what do we put in the aesthetic mapping of specific geoms? Basically, you want to put anything in the global mapping that you want *every layer to inheret* or at least the majority of them.
ggplot(data = iris, aes(x = Sepal.Length, y = Petal.Length, color = Species)) +
ggplot(data = iris, aes(x = Sepal.Length, y = Petal.Length, color = Species)) +
geom_point() +
geom_smooth()
ggplot(data = iris, aes(x = Sepal.Length, y = Petal.Length, color = Species)) +
geom_point() +
geom_smooth()
ggplot(data = iris, aes(x = Sepal.Length, y = Petal.Length, color = Species)) +
geom_point() +
geom_smooth(color = "pink")
ggplot(data = iris, aes(x = Sepal.Length, y = Petal.Length, color = Species)) +
geom_point() +
geom_smooth(color = "black")
And, you can sort of mix and match, if you want a smooth line for each species and a general one:
ggplot(data = iris, aes(x = Sepal.Length, y = Petal.Length, color = Species)) +
geom_point() + # inhereit global
geom_smooth() + # inherit global
geom_smooth(color = "black") # chance color to constant
?ps_data
ps_data
ps_data %>%
group_by(condition) %>%
summarize(m = mean(condition, na.rm = TRUE))
ps_data %>%
group_by(condition) %>%
summarize(m = mean(correct, na.rm = TRUE))
ps_data %>%
group_by(subid) %>%
summarize(m = mean(correct, na.rm = TRUE)) %>%
ggplot(data = ps_data, aes(x = item, y = correct))
ps_data %>%
group_by(subid) %>%
summarize(m = mean(correct, na.rm = TRUE))
?summarize
ps_data %>%
group_by(subid) %>%
summarize(m = mean(correct, na.rm = TRUE),
condition = condition,
item = item) %>%
ggplot(aes(x = item, y = correct))
ggplot(aes(x = age, y = correct)) +
geom_point()
ggplot(data = ps_data, aes(x = age, y = correct)) +
geom_point()
ggplot(ps_data, aes(x = item, y = correct)) +
geom_bar()
ggplot(ps_data, aes(x = item, y = correct)) +
geom_bar(.stat = "mean")
?geom_bar
ggplot(ps_data, aes(x = item, y = correct)) +
geom_bar(.stat = "prop")
ggplot(ps_data, aes(x = item, y = correct)) +
geom_bar(stat = "prop")
ggplot(ps_data, aes(x = item, y = correct)) +
geom_bar(stat = "mean")
ggplot(ps_data, aes(x = item, y = correct)) +
geom_bar(stat = "_mean_")
ggplot(ps_data, aes(x = item, y = correct)) +
geom_bar(stat = "identity")
ggplot(ps_data, aes(x = item, y = correct)) +
geom_bar(stat = "identity") +
facet_wrap(~condition)
ggplot(data = iris) +
geom_point(mapping = aes(x = Sepal.Length, y = Petal.Length)) +
facet_wrap(~ Species)
ggplot(data = iris) +
geom_point(mapping = aes(x = Sepal.Length, y = Petal.Length, color = Species)) +
geom_smooth(mapping = aes(x = Sepal.Length, y = Petal.Length), color = "black")
?geom_smooth
ggplot(data = iris) +
geom_point(aes(x = Sepal.Length, y = Petal.Length, color = Species)) +
geom_smooth(aes(x = Sepal.Length, y = Petal.Length), color = "black")
ggplot(data = iris) +
geom_point(aes(x = Sepal.Length, y = Petal.Length, color = Species)) +
geom_smooth(aes(x = Sepal.Length, y = Petal.Length),
color = "black",
method = "lm")
ggplot(data = iris, aes(x = Sepal.Length, y = Petal.Length)) +
geom_point(aes(color = Species)) +
geom_smooth(color = "black", method = "lm")
ggplot(data = iris, aes(x = Sepal.Length, y = Petal.Length, color = Species)) +
geom_point() +
geom_smooth()
ggplot(data = iris, aes(x = Sepal.Length, y = Petal.Length, color = Species)) +
geom_point() +
geom_smooth(color = "black")
ggplot(data = iris, aes(x = Sepal.Length, y = Petal.Length, color = Species)) +
geom_point() + # inhereit global
geom_smooth() + # inherit global
geom_smooth(color = "black") # change color to constant
ggplot(data = iris, aes(x = Species, y = Petal.Length)) +
geom_bar() + # inhereit global
ggplot(data = iris, aes(x = Species, y = Petal.Length)) +
geom_bar() # inhereit global
ggplot(data = iris, aes(x = Species, y = Petal.Length)) +
geom_bar() # inhereit global
ggplot(data = iris, aes(x = Species, y = Petal.Length)) +
geom_bar() # inhereit global
?geom_bar
?geom_bar
ggplot(ps_data, aes(x = item, y = correct)) +
geom_bar(stat = "identity") +
facet_wrap(~condition)
ggplot(data = iris, aes(x = Species, y = Petal.Length)) +
geom_bar() # inhereit global
ggplot(data = iris, aes(x = Species, y = Petal.Length)) +
geom_bar(stat = "identity") # inhereit global
ggplot(data = iris, aes(x = Species, y = Petal.Length, fill = "species")) +
geom_bar(stat = "identity") # inhereit global
ggplot(data = iris, aes(x = Species, y = Petal.Length, fill = species)) +
geom_bar(stat = "identity") # inhereit global
ggplot(data = iris, aes(x = Species, y = Petal.Length, fill = Species)) +
geom_bar(stat = "identity") # inhereit global
ggplot(ps_data, aes(x = item, y = correct)) +
geom_bar(stat = "identity") +
facet_wrap(~condition)
ggsave("exercise_3.1b_plot.png")
> I want you to re-create this plot:
![]("exercise_3.1b_plot.png")
ggplot(ps_data, aes(x = item, y = correct, fill = item)) +
geom_bar(stat = "identity") +
facet_wrap(~condition)
ggsave("exercise_3.1b_plot.png")
> I want you to re-create this plot:
![](exercise_3.1b_plot.png)
condition_mean_correct <- ps_data %>%
group_by(condition) %>%
summarize(m_correc = mean(correct))
ggplot(ps_data, aes(x = item, y = correct, fill = item)) +
geom_bar(stat = "identity") +
facet_wrap(~condition)
condition_mean_correct <- ps_data %>%
group_by(condition) %>%
summarize(m_correc = sum(correct))
condition_sum_correct <- ps_data %>%
group_by(condition) %>%
summarize(m_correc = sum(correct))
condition_sum_correct <- ps_data %>%
group_by(condition) %>%
summarize(correct = sum(correct))
ggplot(ps_data, aes(x = item, y = correct, fill = item)) +
geom_bar(stat = "identity") +
geom_hline(data = condition_sum_correct, aes(ylim = correct))
ggplot(ps_data, aes(x = item, y = correct, fill = item)) +
geom_bar(stat = "identity") +
geom_hline(data = condition_sum_correct, aes(yintercept = correct))+
facet_wrap(~condition)
starwars %>%
group_by(species) %>%
summarize(m_mass = mean(mass, na.rm = TRUE),
m_height = mean(height, na.rm = TRUE))
starwars
starwars %>%
group_by(species) %>%
summarize(m_mass = mean(mass, na.rm = TRUE),
m_height = mean(height, na.rm = TRUE))
starwars_species_means <- starwars %>%
group_by(species) %>%
summarize(m_mass = mean(mass, na.rm = TRUE),
m_height = mean(height, na.rm = TRUE))
ggplot(data = starwars, aes(x = height, y = mass, species = color)) +
geom_point() +
geom_smooth()
ggplot(data = starwars, aes(x = height, y = mass, color = species)) +
geom_point() +
geom_smooth()
starwars_species_means <- starwars %>%
summarize(m_mass = mean(mass, na.rm = TRUE),
m_height = mean(height, na.rm = TRUE))
starwars_means <- starwars %>%
summarize(m_mass = mean(mass, na.rm = TRUE),
m_height = mean(height, na.rm = TRUE))
ggplot(data = starwars, aes(x = height, y = mass)) +
geom_point() +
geom_smooth(method = "lm") +
geom_hline(data = starwars_means, aes(xintercept = m_height))
ggplot(data = starwars, aes(x = height, y = mass)) +
geom_point() +
geom_smooth(method = "lm") +
geom_hline(data = starwars_means, aes(xintercept = m_height)) +
geom_hline(data = starwars_means, aes(yintercept = m_mass))
ggplot(data = starwars, aes(x = height, y = mass)) +
geom_point() +
geom_smooth(method = "lm") +
geom_vline(data = starwars_means, aes(xintercept = m_height)) +
geom_hline(data = starwars_means, aes(yintercept = m_mass))
ps_data_kidmeans <- ps_data %>%
group_by(subid, item) %>%
summarize(correct = mean(correct, na.rm = TRUE))
ps_data_kidmeans
ps_data %>%
group_by(item) %>%
summarize(correct = mean(correct)) %>%
ggplot(aes(x = item, y = correct, fill = item)) +
geom_bar(stat = "identity") +
geom_point(data = ps_data, aes(x = item, y = correct))+
facet_wrap(~condition)
starwars
starwars %>%
filter(species == "Human" | species == "Droid")
starwars %>%
filter(species == "Human", species == "Droid")
starwars %>%
filter(species == "Human", species == "Droid")
starwars %>%
filter(species == "Human"| species == "Droid")
starwars %>%
filter(species == "Human"| species == "Droid") %>%
group_by(species) %>%
summarize(mass = mean(mass, na.rm = TRUE),
height = mean(height, na.rm = TRUE))
starwars_means <- starwars %>%
filter(species == "Human"| species == "Droid") %>%
group_by(species) %>%
summarize(mass = mean(mass, na.rm = TRUE),
height = mean(height, na.rm = TRUE))
starwars %>%
filter(species == "Human"| species == "Droid") %>%
group_by(species) %>%
summarize(mass = mean(mass, na.rm = TRUE),
height = mean(height, na.rm = TRUE)) %>%
ggplot(aes(x = height, y = mass, fill = species)) +
geom_bar(stat = "identity")
starwars_means <- starwars %>%
filter(species == "Human"| species == "Droid") %>%
group_by(species) %>%
summarize(mass = mean(mass, na.rm = TRUE),
height = mean(height, na.rm = TRUE))
ggplot(starwars, aes(x = height, y = mass, fill = species)) +
geom_point() +
geom_smooth()
geom_bar(data = starwars_means, stat = "identity")
starwars %>%
filter(species == "Human"| species == "Droid") %>%
ggplot(aes(x = height, y = mass, fill = species)) +
geom_point() +
geom_smooth() +
geom_bar(data = starwars_means, stat = "identity")
table4a
library(tidyverse)
table4a
tidy4a <- table4a %>%
gather(`1999`, `2000`, key = "year", value = "cases")
tidy4b <- table4b %>%
gather(`1999`, `2000`, key = "year", value = "population")
left_join(tidy4a, tidy4b)
ps_data <- import("pragmatic_scales.csv")
ps_data <- import("pragmatic_scales_data.csv")
starwars %>%
separate(col = name, into = c("first_name", "last_name"))
starwars_sep_names <- starwars %>%
separate(name, c("first_name", "last_name"), sep = " ")
starwars_sep_names
starwars_sep_names %>%
unite(col = name, first_name, last_name)
starwars_sep_names %>%
unite(col = name, first_name, last_name, sep = " ") %>%
mutate(name = str_remove_all(name, "NA")) # overwrite name with
?str_remove_all
starwars_sep_names %>%
unite(col = name, first_name, last_name, sep = " ") %>%
mutate(name = str_remove_all(string = name, pattern = "NA")) # overwrite name with
head(iris)
ggplot(data = iris)

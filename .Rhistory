df_1$c1
df_1$c1[1]
df_1$c4 <- df_1$c1 + df_1$c2
df_1
df_1$c1 =df_1$c1^2
df_1
str(df_1)
df_1$c1 <- as.integer(df_1$c1)
df_1
str(df_1)
mat2 <- matrix(c(1, 2, 3,
4, 5, 6,
7, 8, 9),
nrow = 3,
byrow = TRUE)
row.names = c("r1", "r2", "r3")
mat2 <- matrix(c(1, 2, 3,
4, 5, 6,
7, 8, 9),
nrow = 3,
byrow = TRUE,
row.names = c("r1", "r2", "r3"))
mat2 <- matrix(c(1, 2, 3,
4, 5, 6,
7, 8, 9),
nrow = 3,
byrow = TRUE,
row.names = c("r1", "r2", "r3"))
mat2 <- matrix(c(1, 2, 3,
4, 5, 6,
7, 8, 9),
nrow = 3,
byrow = TRUE)
mat2[,1] + mat2[,3]
mat2 <- matrix(c(1, 2, 3,
4, 5, 6,
7, 8, 9),
nrow = 3,
byrow = TRUE)
mat2[,1] + mat2[,3]
mat2
mat2[,1] + mat2[,3]
df_2 <- data.frame(c1 = c(1, 2, 3),
c2 = c(2, 4, 6),
c3 = c("a", "b", "c"))
str(df_2)
df_2$c4 <- df_2$c1 + df_2$c2
df_2
df_2[1,] + df_2[2, ]
df_2
df_2$c4 <- df_2$c1 * df_2$c2
df_2
df_2[1,] + df_2[2, ]
df_2
df_2[1,] + df_2[2, ]
?seq
?mean
?mean()
mat
mean(mat)
vec_w_na <- c(1, 2, 3, 4, 5, 6, NA, 2, 4)
mean(vec_w_na)
mean(vec_w_na, na.rm = TRUE)
sd(vec_w_na)
sd(vec_w_na, na.rm = TRUE)
length(vec_w_na)
nrow(df_1)
ncol(df_1)
nrow(mat)
ncol(mat)
?sd
sd(x = vec_w_na, na.rm = TRUE)
sd(vec_w_na, TRUE)
sd(na.rm = TRUE, x = vec_w_na)
mean(vec_w_na, TRUE)
mean(vec_w_na, na.rm = TRUE) # or...
mean(vec_w_na, 0, TRUE)
pretty_mean <- function(data){
mean <- mean(data, na.rm = TRUE)
x <- paste("The Mean is", mean)
}
pretty_mean(vec_w_na)
pretty_mean <- function(data, excited = TRUE){
mean <- mean(data, na.rm = TRUE)
if(excited == FALSE){x <- paste("The Mean is", mean)}
if(excited == TRUE){x <- paste("The Mean is", mean, "!")}
print(x)
}
pretty_mean <- function(data, excited = TRUE){
mean <- mean(data, na.rm = TRUE)
if(excited == FALSE){x <- paste("The Mean is", mean)}
if(excited == TRUE){x <- paste("The Mean is", mean, "!")}
print(x)
}
pretty_mean <- function(data, excited = TRUE){
mean <- mean(data, na.rm = TRUE)
if(excited == FALSE){x <- paste("The Mean is", mean)}
if(excited == TRUE){x <- paste("The Mean is", mean, "!")}
print(x)
}
pretty_mean(vec_w_na)
pretty_mean(vec_w_na, excited = FALSE) # tone it down
pretty_mean <- function(data, excited = TRUE){
mean <- mean(data, na.rm = TRUE)
if(excited == FALSE){x <- paste("The Mean is", mean)}
if(excited == TRUE){x <- paste("The Mean is", mean, "!")}
print(x)
}
pretty_mean(vec_w_na)
x <- pretty_mean(vec_w_na)
x
x
x
x
x
x
x
x
x
x
x
x
x
1:length(vec_w_na)
:length(vec_w_na)
1:length(vec_w_na)
for(i in 1:length(vec_w_na)){
print(paste("The value at index", i, "is", vec_w_na[i]))
}
vec_w_na[1]
vec_w_na[2]
vec_w_na[8]
install.packages("rio")
update.packages("rio")
library(rio)
library("rio") # also works
library(rio)
search()
install.packages("tidyverse")
library(tidyverse)
search()
getwd()
ps_data <- import("pragmatic_scales_data.csv")
library(rio)
ps_data <- import("pragmatic_scales_data.csv")
ps_data <- import("data/ps_data.sav")
ps_data <- import("https://github.com/coryc3133/uoregon_r_bootcamp/pragmatic_scales_data.csv")
ps_data <- import("https://github.com/Coryc3133/uoregon_r_bootcamp/blob/master/pragmatic_scales_data.csv")
ps_data
ps_data <- import("https://raw.githubusercontent.com/Coryc3133/uoregon_r_bootcamp/master/pragmatic_scales_data.csv")
?import
export(ps_data,
"data/ps_data.xlsx")
View(ps_data)
View(ps_data)
head(ps_data)
head(ps_data, n = 20)
tail(ps_data)
str(ps_data)
summary(ps_data)
select(ps_data, age)
library(tidyverse)
?str_detect
ps_data[,which(str_which(colnames(ps_data), "^s") |
str_which(colnames(ps_data), "^a"))]
colnames(ps_data)
ps_data[,which(str_which(colnames(ps_data), "^s") |
str_which(colnames(ps_data), "^a"))]
ps_data[,str_which(colnames(ps_data), "^s") |
str_which(colnames(ps_data), "^a")]
ps_data[,str_which(colnames(ps_data), "^s") |
str_which(colnames(ps_data), "^a")]
str_detect(colnames(ps_data), "^s")
str_which(colnames(ps_data), "^s")
grep(colnames(ps_data), "^s")
grep( "^s", colnames(ps_data))
ps_data[,grep( "^s|^a", colnames(ps_data))]
?grep
ps_data[,grep("^c", colnames(ps_data))]
select(ps_data, age)
library(tidyverse)
select(ps_data, age)
select(ps_data, age)
select(ps_data, age, condition)
select(ps_data, age, condition)
select(ps_data, 1)
select(ps_data, -age)
select(ps_data, -5)
# select first three:
select(ps_data, 1:3)
# de-select last three:
select(ps_data, -(1:3)) # - requires parenthetical sequence
# select first three
select(ps_data, subid:correct)
# deselect first three
select(ps_data, -(subid:correct))
select(ps_data, starts_with("c"))
ps_data[, grep("^c", colnames(ps_data))]
select(ps_data, ends_with("e"))
select(ps_data, contains("i"))
select(ps_data, contains("e"))
filter(ps_data, condition == "No Label")
filter(ps_data, condition == "No Label" & age <= 3)
filter(ps_data, condition == "Label" | age <= 3)
filter(ps_data, between(age, 2.1, 2.5))
filter(ps_data, between(age, 2.1, 2.5))
filter(ps_data, between(age, 3, 4))
filter(ps_data, age >= 3 & age <= 4)
ps_data$age %>% # LHS is age vector from ps_data
mean() # pass that to the mean function
ps_data$age
ps_data %>% # take the data, then...
select(age) %>%  # select age, then...
mean() # take the mean
ps_data %>% # take the data, then...
select(age) %>%  # select age, then...
mean(na.rm = TRUE) # take the mean
ps_data %>% # take the data, then...
select(age) %>%  # select age, then...
mean(na.rm = TRUE) # take the mean
ps_data %>% # take the data, then...
select(age)
ps_data %>% # take the data, then...
select(age) %>%  # select age, then...
mean(na.rm = TRUE) # take the mean
ps_data %>% # take the data, then...
select(age) %>%  # select age, then...
mean() # take the mean
ps_data %>% # take the data, then...
pull(age) %>%  # select age, then...
mean() # take the mean
ps_data %>% # take the data, then...
select(age) %>%  # select age, then...
mean() # take the mean
ps_data %>% # take the data, then...
select(age) %>% typeof
ps_data %>% # take the data, then...
select(age) %>% class()
?class
ps_data %>% # take the data, then...
select(age) %>%  # select age, then...
mean() # take the mean
another_df %>%
filter(age >= 4) %>%
select(correct) %>%
sum()
ps_data %>%
filter(age >= 4) %>%
select(correct) %>%
sum()
# or
ps_data %>%
filter(age >= 4 & correct == 1) %>%
nrow()
ps_data %>% # take the data, then...
select(age) %>%  # select age, then...
sum() # take the mean
ps_data$age %>% # LHS is age vector from ps_data
sum() # pass that to the sum function
ps_data %>% # take the data, then...
select(age) %>%  # select age, then...
sum() # take the sum
ps_data %>% # take the data, then...
select(age) %>%  # select age, then...
mean()
ps_data %>% # take the data, then...
select(age) %>%  # select age, then...
sum()
sum(select(ps_data, age), na.rm = TRUE)
unique(select(filter(ps_data, age > 2.5 | age < 3.2), age, subid))
data_subset_age <- filter(ps_data, age > 2.5 | age > 3.2)
data_subset_age <- filter(ps_data, age > 2.5 | age > 3.2)
data_subset_age_ids <- select(data_subset_age, centered_age, subid)
data_subset_age_ids <- select(data_subset_age, subid)
unique(data_subset_age_ids)
data_subset_age_ids <- select(data_subset_age, subid, age)
unique(data_subset_age_ids)
ps_data %>% # take the data, then...
filter(age > 2.5 | age > 3.2) %>% # filter for kids between 2.5 and 3.2, then...
select(subid, age) %>% # select subject id and centered age, then...
unique() # get unique rows
unique_filtered_data <- ps_data %>% # take the data, then...
filter(age > 2.5 | age > 3.2) %>% # filter for kids between 2.5 and 3.2, then...
select(subid, age) %>% # select subject id and centered age, then...
unique() # get unique rows
ps_data %>%
filter(age >= 4) %>%
select(correct) %>%
sum()
# or
ps_data %>%
filter(age >= 4 & correct == 1) %>%
nrow()
starwars %>%
select(name, homeworld)
starwars %>%
select(name:homeworld)
starwars %>%
select(contains("color"))
starwars %>%
select(homeworld, name, everything())
starwars %>%
select(starts_with("h"), everything())
starwars %>%
select(name, species, ends_with("color"))
starwars %>%
select(name, species, contains("color"))
?matches
starwars %>%
filter(height > mean(height, na.rm = TRUE) + sd(height, na.rm = TRUE)) # don't forget na.rm!
starwars %>%
filter(mass == NA)
starwars %>%
filter(is.na(mass)) # note you wrap the variable in is.na()
starwars %>%
filter(!is.na(mass))
!TRUE
!FALSE
! 5 == 5
! 5 == 4
starwars %>%
filter(height > mean(height, na.rm = TRUE) + sd(height, na.rm = TRUE) &
mass < mean(mass, na.rm = TRUE))
starwars %>%
filter(height > mean(height, na.rm = TRUE) + sd(height, na.rm = TRUE) |
height < mean(height, na.rm = TRUE) + sd(height, na.rm = TRUE))
starwars %>%
filter(hair_color == "grey")
starwars %>%
filter(hair_color == "grey" |
hair_color == "brown")
starwars %>%
filter(hair_color != "brown")
starwars %>%
filter(str_detect(hair_color, "grey")) # first argument is string var,
starwars %>%
filter(!str_detect(hair_color, "grey"))
starwars %>%
filter(birth_year >= 200)
starwars %>%
filter(!str_detect(eye_color, "blue")) %>%
select(name, eye_color, species)
starwars %>%
filter(species == "Droid" & homeworld == "Tatooine" |
species == "Human" & homeworld == "Naboo") %>%
select(name, homeworld, species, ends_with("color"))
starwars$height_in_m = starwars$height/100
starwars
1.72*3.2
1.72*3.28
starwars
# cleaning it back up
starwars <- starwars %>%
select(-height_in_m)
starwars
starwars %>%
mutate(height_in_mm = height*10,
height_in_m = height/100)
starwars %>%
mutate(height_z = scale(height),
mass_z = scale(mass),
height_mass_z = rowMeans(data.frame(height_z, mass_z), na.rm = TRUE))
starwars %>%
rowwise() %>%
mutate(height_z = scale(height),
mass_z = scale(mass),
height_mass_z = mean(c(height_z, mass_z), na.rm = TRUE))
starwars %>%
mutate(height_z = scale(height),
mass_z = scale(mass)) %>%
rowwise() %>%
mutate(height_mass_z = mean(c(height_z, mass_z), na.rm = TRUE))
starwars %>%
mutate(gender = factor(gender))
starwars %>%
transmute(height_z = scale(height),
mass_z = scale(mass))
starwars %>%
mutate(height_in_m = height / 100,
bmi = mass / height_in_m^2)
starwars %>%
transmute(name = name,
mass = mass,
height_in_m = height / 100,
bmi = mass / height_in_m^2)
starwars
?group_by
starwars %>%
group_by(homeworld)
starwars %>%
group_by(homeworld)
x <- starwars %>%
group_by(homeworld)
names(x)
starwars %>%
mutate(mean_mass = mean(mass, na.rm = TRUE))
starwars %>%
transmute(mean_mass = mean(mass, na.rm = TRUE))
select(homeworld, mean_mass, everything()
starwars %>%
starwars %>%
mutate(mean_mass = mean(mass, na.rm = TRUE)) %>%
select(homeworld, mean_mass, everything())
starwars %>%
group_by(homeworld) %>%
mutate(mean_mass = mean(mass, na.rm = TRUE)) %>%
select(homeworld, mean_mass, everything())
starwars %>%
group_by(species)
starwars %>%
group_by(species) %>%
mutate(species_centered_mass = mass - mean(mass, na.rm = TRUE))
starwars %>%
group_by(species) %>%
mutate(species_mean_mass = mean(mass, na.rm = TRUE),
species_centered_mass = mass - species_mean_mass) %>%
select(name, species, ends_with("mass"))
starwars %>%
group_by(species) %>%
mutate(species_mean_mass = mean(mass, na.rm = TRUE),
species_centered_mass = mass - species_mean_mass) %>%
select(name, species, ends_with("mass"))
starwars %>%
summarize(mean_mass = mean(mass, na.rm = TRUE))
starwars %>%
summarize(mean_mass = mean(mass, na.rm = TRUE).
starwars %>%
summarize(mean_mass = mean(mass, na.rm = TRUE),
sd_mass = sd(mass),
n = n())
starwars %>%
summarize(mean_mass = mean(mass, na.rm = TRUE),
sd_mass = sd(mass, na.rm = TRUE),
n = n())
starwars %>%
group_by(species) %>% # just add the group_by() call
summarize(mean_mass = mean(mass, na.rm = TRUE),
sd_mass = sd(mass, na.rm = TRUE),
n = n())
starwars %>%
group_by(species) %>% # just add the group_by() call
summarize(mean_mass = mean(mass, na.rm = TRUE),
sd_mass = sd(mass, na.rm = TRUE),
n = n()) %>%
filter(n > 1)
starwars %>%
group_by(species, gender) %>% # just add the group_by() call
summarize(mean_mass = mean(mass, na.rm = TRUE),
sd_mass = sd(mass, na.rm = TRUE),
n = n()) %>%
filter(n > 1)
ps_data %>%
group_by(condition, item) %>%
summarize(prop_correct = mean(correct))
ps_data %>%
group_by(condition, item) %>%
summarize(num_correct = sum(correct),
prop_correct = mean(correct))
ps_data %>%
group_by(condition, item) %>%
summarize(num_correct = sum(correct),
num_trials = n(),
prop_correct = mean(correct))
starwars %>%
arrange(mass)
starwars %>%
arrange(desc(mass))
starwars %>%
arrange(height, mass)
starwars %>%
arrange(name)
starwars %>%
rename(nombre = name)
starwars %>%
rename(nombre = name,
altura = height,
masa = mass)
starwars %>%
rename(nombre = name,
altura = height,
masa = mass)
nycflights13::airlines
nycflights13::flights
comics
lightsabers <- data.frame(name = c("Luke Skywalker", "Darth Vader", "Obi-Wan Kenobi"),
lightsaber_color = c("green", "red", "blue"))
left_join(starwars,
lightsabers)
lightsabers <- data.frame(name = c("Luke Skywalker", "Darth Vader", "Obi-Wan Kenobi", "Dooku"),
lightsaber_color = c("green", "red", "blue", "red"))
starwars %>%
distinct(homeworld)
starwars %>%
distinct(homeworld, species)
starwars %>%
distinct(homeworld, species, .keep_all = TRUE)
ps_data %>%
distinct(subid, .keep_all = TRUE) %>%
count(age)
ps_data %>%
distinct(subid, .keep_all = TRUE) %>%
count(age) %>%
filter(n > 1)
starwars %>%
count(species)
ps_data %>%
distinct(subid, .keep_all = TRUE) %>%
count(age) %>%
arrange(desc(n))
starwars %>%
count(species, homeworld) %>%
arrange(desc(n))

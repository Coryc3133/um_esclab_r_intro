mixed_mat
cory$year[2] <- cory$year*7
cory$year[2]
cory$year
cory$year
mat[1, 1]
mat[,1]
mat[,2]
mat[1,2]
mat[,2]
mat["r1", "c1"]
mat["r1", 2]
mat$c1
mat2 <- matrix(c(1, 2, 3, 4, 5, 6, 7, 8, 9),
nrow = 3,
byrow = TRUE)
mat2
mat2 <- matrix(c(1, 2, 3,
4, 5, 6,
7, 8, 9),
nrow = 3,
byrow = TRUE)
mat2[,1] + mat2[,3]
mat2[3,] * mat2[2, 2]
array(c(mat2, mat2*2), dim =c(3, 3, 2)
array(c(mat2, mat2*2), dim =c(3, 3, 2))
array(c(mat2, mat2*2), dim =c(3, 3, 2))
?data.frame
data
?data
data.frame(mixed_mat)
data.frame(mixed_mat)[1, 1] + data.frame(mixed_mat)[2, 1]
data.frame(cory)
first_df <- data.frame(mixed_mat)
first_df
str(first_df)
?factor
first_df[1, 3]
first_df["r1", "c3"]
first_df[, "c2"]
first_df$c1
first_df$c1[1]
first_df$c1[1]
c1 <- c(1, 2, 3)
c2 <- c(2, 4, 6)
c3 <- c("a", "b", "c")
df_2 <- cbind(c1, c2, c3)
df_2 <- data.frame(cbind(c1, c2, c3))
df_2
df_2 <- data.frame(c1, c2, c3)
df_2
df_2 <- data.frame(c1 = c(1, 2, 3),
c2 = c(2, 4, 6),
c3 = c("a", "b", "c"))
df_1 = data.frame(c1 = c(1, 3),
c2 = c(2, 4),
c3 = c("a", "b"))
df_1[1, 3]
df_1["r1", "c3"]
df_1
df_1 = data.frame(c1 = c(1, 3),
c2 = c(2, 4),
c3 = c("a", "b"),
row.names = c("r1", "r2"))
df_1[1, 3]
df_1["r1", "c3"]
df_1[, "c2"]
df_1$c1
df_1$c1[1]
str(df_1)
str(df_2)
df_2$c1 + df_2$c2
df_2$r1 + df_2$r2
df_2$r1
df_2[1,] + df_2[2,]
?seq
?seq
seq()
mean()
mean(mat)
?mean
mean(mat2)
mean(mixed_mat)
mean(mixed_mat, na.rm = TRUE)
vec_w_na <- c(1, 2, 3, 4, 5, 6, NA, 2, 4)
mean(vec_w_na)
mean(vec_w_na, na.rm = TRUE)
sd(vec_w_na, na.rm = TRUE)
?sd
length(vec_w_na)
mat
length(mat)
nrow(df_2)
ncol(df_2)
nrow(mat)
ncol(mat)
?sd
sd(x = vec_w_na, na.rm = TRUE)
sd(vec_w_na, TRUE)
sd(na.rm = TRUE, x = vec_w_na)
mean(vec_w_na, TRUE)
pretty_mean <- function(data){
mean <- mean(data, na.rm = TRUE)
paste("The Mean is", mean)
}
pretty_mean(vec_w_na)
paste("The SD is", mean)
pretty_mean <- function(data){
mean <- sd(data, na.rm = TRUE)
paste("The SD is", mean)
}
pretty_mean(vec_w_na)
vec_w_na.
paste("The value at index", i, "is", each)
for(i in 1:length(vec_w_na)){
paste("The value at index", i, "is", each)
}
paste("The value at index", i, "is", vec_w_na[i])
for(i in 1:length(vec_w_na)){
paste("The value at index", i, "is", vec_w_na[i])
}
for(i in 1:length(vec_w_na)){
paste("The value at index", i, "is", vec_w_na[i])
}
for(i in 1:length(vec_w_na)){
paste("The value at index", i, "is", vec_w_na[i])
}
vec_w_na
print(paste("The value at index", i, "is", vec_w_na[i]))
for(i in 1:length(vec_w_na)){
print(paste("The value at index", i, "is", vec_w_na[i]))
}
for(i in 1:length(vec_w_na)){
print(paste("The value at index", i, "is", vec_w_na[i]*7))
}
vec_w_na[i]/5
for(i in 1:length(vec_w_na)){
vec_w_na[i]/5
}
for(i in 1:length(vec_w_na)){
print(vec_w_na[i]/5)
}
df_2
# Add
2 + 3
# subtract
2 - 3
# multiplication
2 * 3
# Division
10/2
# Exponents
4^2
# Roots
4^(1/2)
(2^3)+4*(5/3)
x <- 8
x = 8
x
# Need to assign something to y!
y <- 2
y
# add em up:
x + y
# multiply them
x * y
# define the product as z
z <- x * y
this_is_snake_case <- 8 # a_fine_choice
thisIsCamelCase <- 8 #alsoTotallyWorks
some.maniacs.use.periods <- 8 # probably.best.avoided
And_someTimes.People_doSTRANGEtHiNgS <- 8 # PLEASE NEVER DO ANYTHING LIKE THIS!
typeof(1)
typeof(TRUE)
typeof(1L)
typeof(NA_character_)
typeof(NA)
typeof(NULL)
typeof(NaN)
typeof(Inf)
typeof("one")
x <- 1:5 # sequence of the form starting_number:ending_number
?seq
seq()
seq(from = 1, to = 5)
seq(from = 1, to = 5, by = 2)
# We can also assign a vector of values this way
x <- c(2, 8.5, 1, 9)
letters <- c("a", "b", "c", "d")
mixed_vec <- c(x, letters)
mixed_vec
typeof(mixed_vec)
as.numeric(mixed_vec)
x <- 8
y <- seq(from = 2, to = 16, by = 2)
x + y
z <- c(5, 10)
q <- seq(from = 5, to = 25, by = 5)
q*z
b <- "8"
typeof(x)
typeof(y)
typeof(q)
typeof(z)
typeof(b)
as.numeric(b) + x
q[1]
q[1:2]
q[c(1, 3)]
names(q)
names(q) <- c("first", "second", "third", "fourth", "fifth")
names(q)
q["first"]
q[1]
named <- 1:5
names(named) <- c("a", "b", "c", "d", "e")
named[1]
named["e"]
cory <- list(5L,
"Cory Costello",
TRUE)
cory
cory <- list(year = 5L,
name = "Cory Costello",
enrollment = TRUE)
cory
names(cory)
cory <- list(year = 5L,
name = "Cory Costello",
enrollment = TRUE,
fave_data = c("strings", "numbers")) # note c() to create a vector
cory
cory[1]
cory[[1]]
cory[[1]] * 7
cory["year"]
cory[["year"]]
cory$year
cory[[4]][2]
cory[["fave_data"]][2]
cory$fave_data[2]
cory$year[2] <- cory$year*7
cory$year
mat <- matrix(data = c(1, 2, # data in either row-wise or column-wise order
3, 4), # don't have to do two lines, but it looks nice
nrow = 2, # number of rows
ncol = 2, # number of columns
byrow = TRUE) # tell it the order of data above
mat
c1 <- c(1, 3)
c2 <- c(2, 4)
mat <- cbind(c1, c2)
mat
r1 <- c(1, 2)
r2 <- c(3, 4)
mat <- rbind(r1, r2)
mat
rownames(mat)
colnames(mat)
colnames(mat) <- c("c1",  "c2")
mat
mixed_mat <- cbind(mat,
c3 = c("a", "b"))
mixed_mat
mat[1, 1]
mat[,2]
mat["r1", "c1"]
mat["r1", 2]
mat2 <- matrix(c(1, 2, 3,
4, 5, 6,
7, 8, 9),
nrow = 3,
byrow = TRUE)
mat2[,1] + mat2[,3]
mat2[3,] * mat2[2, 2]
array(c(mat2, mat2*2), dim =c(3, 3, 2))
df_1 <- data.frame(mixed_mat)
df_1
df_1 = data.frame(c1 = c(1, 3),
c2 = c(2, 4),
c3 = c("a", "b"),
row.names = c("r1", "r2"))
df_1[1, 3]
df_1["r1", "c3"]
df_1[, "c2"]
df_1$c1
df_1$c1[1]
str(df_1)
df_2 <- data.frame(c1 = c(1, 2, 3),
c2 = c(2, 4, 6),
c3 = c("a", "b", "c"))
str(df_2)
df_2$c1 + df_2$c2
df_2[1,] + df_2[2,]
seq()
mean(mat2)
vec_w_na <- c(1, 2, 3, 4, 5, 6, NA, 2, 4)
mean(vec_w_na)
mean(vec_w_na, na.rm = TRUE)
sd(vec_w_na, na.rm = TRUE)
length(vec_w_na)
nrow(df_2)
ncol(df_2)
nrow(mat)
ncol(mat)
sd(x = vec_w_na, na.rm = TRUE)
sd(vec_w_na, TRUE)
sd(na.rm = TRUE, x = vec_w_na)
mean(vec_w_na, TRUE)
for(i in 1:length(vec_w_na)){
print(vec_w_na[i]/5)
}
library(rio)
search()
search()
library(tidyverse)
install.packages("tidyverse")
install.packages("tidyverse")
library(tidyverse)
# Add
2 + 3
# subtract
2 - 3
# multiplication
2 * 3
# Division
10/2
# Exponents
4^2
# Roots
4^(1/2)
(2^3)+4*(5/3)
x <- 8
x = 8
x
# Need to assign something to y!
y <- 2
y
# add em up:
x + y
# multiply them
x * y
# define the product as z
z <- x * y
this_is_snake_case <- 8 # a_fine_choice
thisIsCamelCase <- 8 #alsoTotallyWorks
some.maniacs.use.periods <- 8 # probably.best.avoided
And_someTimes.People_doSTRANGEtHiNgS <- 8 # PLEASE NEVER DO ANYTHING LIKE THIS!
typeof(1)
typeof(TRUE)
typeof(1L)
typeof(NA_character_)
typeof(NA)
typeof(NULL)
typeof(NaN)
typeof(Inf)
typeof("one")
x <- 1:5 # sequence of the form starting_number:ending_number
?seq
seq()
seq(from = 1, to = 5)
seq(from = 1, to = 5, by = 2)
# We can also assign a vector of values this way
x <- c(2, 8.5, 1, 9)
letters <- c("a", "b", "c", "d")
mixed_vec <- c(x, letters)
mixed_vec
typeof(mixed_vec)
as.numeric(mixed_vec)
x <- 8
y <- seq(from = 2, to = 16, by = 2)
x + y
z <- c(5, 10)
q <- seq(from = 5, to = 25, by = 5)
q*z
b <- "8"
typeof(x)
typeof(y)
typeof(q)
typeof(z)
typeof(b)
as.numeric(b) + x
q[1]
q[1:2]
q[c(1, 3)]
names(q)
names(q) <- c("first", "second", "third", "fourth", "fifth")
names(q)
q["first"]
q[1]
named <- 1:5
names(named) <- c("a", "b", "c", "d", "e")
named[1]
named["e"]
cory <- list(5L,
"Cory Costello",
TRUE)
cory
cory <- list(year = 5L,
name = "Cory Costello",
enrollment = TRUE)
cory
names(cory)
cory <- list(year = 5L,
name = "Cory Costello",
enrollment = TRUE,
fave_data = c("strings", "numbers")) # note c() to create a vector
cory
cory[1]
cory[[1]]
cory[[1]] * 7
cory["year"]
cory[["year"]]
cory$year
cory[[4]][2]
cory[["fave_data"]][2]
cory$fave_data[2]
cory$year[2] <- cory$year*7
cory$year
mat <- matrix(data = c(1, 2, # data in either row-wise or column-wise order
3, 4), # don't have to do two lines, but it looks nice
nrow = 2, # number of rows
ncol = 2, # number of columns
byrow = TRUE) # tell it the order of data above
mat
c1 <- c(1, 3)
c2 <- c(2, 4)
mat <- cbind(c1, c2)
mat
r1 <- c(1, 2)
r2 <- c(3, 4)
mat <- rbind(r1, r2)
mat
rownames(mat)
colnames(mat)
colnames(mat) <- c("c1",  "c2")
mat
mixed_mat <- cbind(mat,
c3 = c("a", "b"))
mixed_mat
mat[1, 1]
mat[,2]
mat["r1", "c1"]
mat["r1", 2]
mat2 <- matrix(c(1, 2, 3,
4, 5, 6,
7, 8, 9),
nrow = 3,
byrow = TRUE)
mat2[,1] + mat2[,3]
mat2[3,] * mat2[2, 2]
array(c(mat2, mat2*2), dim =c(3, 3, 2))
df_1 <- data.frame(mixed_mat)
df_1
df_1 = data.frame(c1 = c(1, 3),
c2 = c(2, 4),
c3 = c("a", "b"),
row.names = c("r1", "r2"))
df_1[1, 3]
df_1["r1", "c3"]
df_1[, "c2"]
df_1$c1
df_1$c1[1]
str(df_1)
df_2 <- data.frame(c1 = c(1, 2, 3),
c2 = c(2, 4, 6),
c3 = c("a", "b", "c"))
str(df_2)
df_2$c1 + df_2$c2
df_2[1,] + df_2[2,]
seq()
mean(mat2)
vec_w_na <- c(1, 2, 3, 4, 5, 6, NA, 2, 4)
mean(vec_w_na)
mean(vec_w_na, na.rm = TRUE)
sd(vec_w_na, na.rm = TRUE)
length(vec_w_na)
nrow(df_2)
ncol(df_2)
nrow(mat)
ncol(mat)
sd(x = vec_w_na, na.rm = TRUE)
sd(vec_w_na, TRUE)
sd(na.rm = TRUE, x = vec_w_na)
pretty_mean <- function(data){
mean <- mean(data, na.rm = TRUE)
paste("The Mean is", mean)
}
pretty_mean(vec_w_na)
pretty_mean <- function(data){
mean <- sd(data, na.rm = TRUE)
paste("The SD is", mean)
}
pretty_mean(vec_w_na)
for(i in 1:length(vec_w_na)){
print(paste("The value at index", i, "is", vec_w_na[i]))
}
for(i in 1:length(vec_w_na)){
print(vec_w_na[i]/5)
}
library(rio)
search()
library(tidyverse)
search()
search()
?filter
?stats::filter
?dplyr::filter
?filter
getwd()
# What is in my working directory?
dir()
